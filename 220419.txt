1교시

표준 입출력

키보드로 입력하는 것을 표준 입력

화면으로 출력하는 것을 표준 출력

next(): 한 공간

nextLine(): 한 줄

파일 입출력

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
package day09;
 
import java.io.*;
 
public class WritingDatas {
  public void writingData(String fname, boolean append) throws IOException {
    FileOutputStream fos = null;
    DataOutputStream dos = null;
    try {
      fos = new FileOutputStream(new File(fname), append);
      dos = new DataOutputStream(fos);
      dos.writeBoolean(append);
      dos.writeByte(123);
      dos.writeChar(75);
      dos.writeDouble(34.56);
      dos.writeFloat(345.23f);
      dos.writeInt(123);
      dos.writeLong(345L);
      dos.writeUTF("홍길동");
      dos.flush(); // fos.close();
    } catch (FileNotFoundException e) {
      System.out.println("잘못된 파일이름을 입력했습니다.");
    }
  }
 
  public void readingData(String fname) throws IOException {
    try {
      FileInputStream fis = new FileInputStream(new File(fname));
      DataInputStream dis = new DataInputStream(fis);
      System.out.println("append가능? :" + dis.readBoolean());
      System.out.println("read byte :" + dis.readByte());
      System.out.println("read char :" + dis.readChar());
      System.out.println("read double :" + dis.readDouble());
      System.out.println("read float :" + dis.readFloat());
      System.out.println("read int :" + dis.readInt());
      System.out.println("read long :" + dis.readLong());
      System.out.println("read utf :" + dis.readUTF());
      dis.close();
    } catch (FileNotFoundException e) {
      System.out.println("잘못된 파일이름을 입력했습니다.");
    }
  }
 
  public static void main(String[] args) {
    WritingDatas wd = new WritingDatas();
    try {
      wd.writingData("writed.txt", false);
      wd.readingData("writed.txt");
    } catch (IOException e) {
      e.printStackTrace();
    }
  }
}
 
 
 
 
 

 

2교시

직렬화

-  인스턴스가 파일에 저장될때 저장을 위해 거치는과정을가리켜 직렬화(serialization)이라하고,
    그반대의 과정을 가리켜 역직렬화(deserialization) 이라한다 

-  직렬화의대상이되는인스턴스의클래스는java.io.Seiralizable인터페이스를구현해야한다.
-  이인터페이스는 직렬화의대상임을표시 하는인터페이스이며 메소드가존재하지 않다.

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
package day09;
 
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
 
class Circle implements Serializable {
  int xPos;
  int yPos;
  double rad;
 
  Circle(int x, int y, double r) {
    xPos = x;
    yPos = y;
    rad = r;
  }
 
  public void showCircleInfo() {
    System.out.printf("[%d, %d] \n", xPos, yPos);
    System.out.println("rad: " + rad);
  }
}
 
public class CircleTest {
 
  public static void main(String[] args) throws IOException, ClassNotFoundException {
 
    ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("Object.ser"));
 
    out.writeObject(new Circle(1, 1, 2.4));
    out.writeObject(new Circle(2, 2, 4.8));
    out.writeObject(new String("String implements Serializable"));
    out.close();
 
    ObjectInputStream in = new ObjectInputStream(new FileInputStream("Object.ser"));
 
    Circle c1 = (Circle) in.readObject();
    Circle c2 = (Circle) in.readObject();
    String str = (String) in.readObject();
    in.close();
 
    c1.showCircleInfo();
    c2.showCircleInfo();
    System.out.println(str);
 
  }
 
}
 
 
 

3교시

transient : 직렬화 대상에서 제외되는 것

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
package day09;
 
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
 
class Personal implements Serializable {
  String name;
  transient String secretInfo;
  int age;
  transient int secretNum;
 
  Personal(String name, String sinfo, int age, int snum) {
    this.name = name;
    secretInfo = sinfo;
    this.age = age;
    secretNum = snum;
  }
 
  public void showPersonal() {
    System.out.println("name:" + name);
    System.out.println("secretInfo:" + secretInfo);
    System.out.println("age:" + age);
    System.out.println("secretNum:" + secretNum);
  }
}
 
public class PersonalTest {
 
  public static void main(String[] args) throws IOException, ClassNotFoundException {
    Personal p = new Personal("John", "baby", 3, 42);
    p.showPersonal();
 
    ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream("Object2.ser"));
 
    out.writeObject(p);
    out.close();
 
    ObjectInputStream in = new ObjectInputStream(new FileInputStream("Object2.ser"));
 
    Personal p2 = (Personal) in.readObject();
 
    System.out.println(">>>> 복원된 Personal");
    p2.showPersonal();
    in.close();
 
  }
 
}
 
 
 

 

4교시

IO Stream

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
package day09.test;
 
import java.io.FileWriter; 
import java.io.PrintWriter; 
 
public class DevTest{
 
 
    public static void main(String[] args) { 
      String fileName = "C:/aistudy/java/dev.txt"; 
       
      try{ 
        FileWriter fw = new FileWriter(fileName, false); 
        PrintWriter pw = new PrintWriter(fw); 
         
        pw.println("왕눈이,90,95,60,75"); 
        pw.println("개구리,100,90,65,90"); 
        pw.println("두꺼비,90,100,80,85"); 
        pw.println("홍길동,65,80,85,95"); 
        pw.println("가나다,90,95,75,100"); 
        pw.flush(); 
        pw.close(); 
        fw.close(); 
         
      }catch(Exception e){ 
        System.out.println(e.toString()); 
      } 
    } 
 
  }
 
package day09.test;
 
 
  import java.io.BufferedReader; 
  import java.io.FileReader; 
  import java.io.FileWriter; 
  import java.io.PrintWriter; 
  import java.util.Date; 
 
 
  public class DevTest2 {
 
    public static void main(String[] args) { 
      String fileName = "C:/aistudy/java/dev.txt"; 
      String fileNameOutput = "C:/aistudy/java/dev_output.txt"; 
       
      try{ 
        FileReader fr = new FileReader(fileName); 
        BufferedReader br = new BufferedReader(fr); 
         
        FileWriter fw = new FileWriter(fileNameOutput, false); 
        PrintWriter pw = new PrintWriter(fw); 
         
        String line = ""; 
         
        pw.println("        2022년 신입사원 평가 점수 "); 
        pw.println(""); 
        pw.println("평가일: " + new Date().toLocaleString()); 
        pw.println("-----------------------------------------------------------"); 
        pw.println("성  명  JAVA  JSP  SPRING    PROJECT     TOT    AVG"); 
        pw.println("-----------------------------------------------------------"); 
        while(true){ 
          line = br.readLine(); // 한라인씩 읽어옴. 
           
          if (line == null){ 
            break; 
          } 
          String[] str = line.split(","); 
//          System.out.println(str[0]); 
//          System.out.println(str[1]); 
//          System.out.println(str[2]); 
//          System.out.println(str[3]); 
//          System.out.println(str[4]); 
          String name = str[0]; 
          int java = Integer.parseInt(str[1]); 
          int jsp = Integer.parseInt(str[2]); 
          int spring = Integer.parseInt(str[3]); 
          int project = Integer.parseInt(str[4]); 
           
          int tot = java + jsp + spring + project; 
          int avg = tot / 4;  
          pw.println(name + "   " + java + "   " + jsp + "     " +  spring + "           " + project + "          "+ tot + "       " + avg); 
          pw.println("------------------------------------------------------------");   
        } 
        pw.println("         MultiCampus IT Academy 2022        "); 
         
        br.close(); 
        fr.close(); 
         
        pw.flush(); 
        pw.close(); 
        fw.close(); 
         
      }catch(Exception e){ 
         
      } 
 
    } 
 
  } 
 
 
 
 
package day09.test;
 
import java.io.BufferedReader; 
import java.io.FileReader; 
 
 
public class DevTest3 { 
 
  public static void main(String[] args) { 
    String fileName = "C:/aistudy/java/dev_output.txt"; 
     
    try { 
      FileReader fr = new FileReader(fileName);  // 파일 읽기 실행 
      BufferedReader br = new BufferedReader(fr);// 메모리에 파일 내용 저장 
 
      String str = ""; 
      String line = ""; 
 
      while (true) {  
        line = br.readLine();    // 한 라인씩 읽음 
         
        if (line == null){       // 파일을 마지막까지 읽은 경우 
          break;                 // while문 종료   
        } 
        System.out.println(line); // 문자열 추가, \n: 라인 변경 
      } 
 
      br.close();                // 메모리 해제 
      fr.close(); 
    } catch (Exception e) { 
      System.out.println(e); 
    } 
 
  } 
 
} 
 
 
 

Collections Framework

  - 배열의 단점을 개선한 클래스로 객체만 저장할 수 있다. 
  - 배열의 단점인 메모리 낭비를 피할수 있는 구조이다. 
  - 동적인 크기 변경이 가능합니다. 
  - 자료를 효율적으로 정리하는것을 자료구조(Data structure)라 한다. 
  - 자료구조 방법에는 Set계열, List계열, Map계열이 있다. 
  - java는 java.util 패키지의 자바 컬렉션(JCF)에서 자료구조 방법을 제공한다

1) set

순서가 없고 중복이 안 된다.

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
package day09;
 
import java.util.HashSet;
 
import java.util.*;
 
public class SetTest {
  public static void main(String[] args) {
    HashSet list = new HashSet();
 
    list.add("lee");// 0
    list.clear();// 모두 제거
    list.add("cho");// 0
    list.add("kim");// 1
    list.add("chung");// 2
    list.add("min");// 3
    list.add("chung");// 2과 동일
 
    System.out.println("set 사이즈:" + list.size());// size()
    System.out.println(list.contains("chung"));
 
    list.remove("kim");// 1제거
 
    System.out.println("kim 제거후 set 사이즈:" + list.size());
    System.out.println("Iterator객체 이용해서 set출력");
    print(list.iterator());
 
    System.out.println("배열을 이용해서 set출력");
    print(list.toArray());
  }
 
  public static void print(Iterator iter) {
    while (iter.hasNext()) {
      String str = (String) iter.next();
      System.out.println(str);
    }
  }//
 
  public static void print(Object[] obj) {
    int count = obj.length;
    for (int i = 0; i < count; i++) {
      System.out.println(obj[i]);
    }
  }//
}
 
 
 
2)List

순서가 있고 중복이 가능하다.

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
package day09;
 
import java.util.*; 
public class ListTest1 { 
    public static void main(String[] args) { 
        ArrayList list=new ArrayList(); 
        list.add("lee"); 
        list.clear();
        list.add("cho");
        list.add("kim");
        list.add("chung");
        list.add("min");
        list.add("chung");
        System.out.println("ArrayList 사이즈:"+list.size());//size() 
        System.out.println(list.contains("chung")); 
        list.remove("kim");
        list.remove(3);
        System.out.println("ArrayList 사이즈:"+list.size()); 
        System.out.println("min이 있는 위치값:"+list.indexOf("min")); 
 
        System.out.println("Iterator를 이용해서 출력"); 
        print(list); 
        System.out.println("배열를 이용해서 출력"); 
        print(list.toArray()); 
        //ArrayList 에서 0에서 1까지의 데이타 추출 
        List sublist=list.subList(0,2);//0~2-1까지 
        System.out.println("추출된 데이타만 출력"); 
        print(sublist); 
        System.out.println("for문을 이용해서 출력"); 
        printGet(list); 
    } 
    public static void print(List list){ 
        Iterator iter=list.iterator(); 
            while(iter.hasNext()){ 
            String str=(String)iter.next(); 
            System.out.println(str); 
        } 
    }// 
    public static void print(Object [] obj){ 
        int count=obj.length; 
        for(int i=0;i<count;i++){ 
            System.out.println(obj[i]); 
        } 
    }// 
    public static void printGet(List set){ 
        int count=set.size(); 
        for(int i=0;i<count;i++){ 
            System.out.println(set.get(i)); 
            //String str=(String)set.get(i) 
        } 
    }// 
}
 
 
 

5교시

ArrayList

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
package day09;
 
import java.util.ArrayList; 
 
class Jumsu{ 
    //멤버 변수 
    String name=""; 
    int kuk = 0; 
    int eng = 0; 
    int tot = 0; 
    int avg = 0; 
     
    //생성자 
    public Jumsu(){} 
    public Jumsu(String name,int kuk,int eng){ 
        this.name = name; 
        this.kuk = kuk; 
        this.eng = eng; 
        this.tot = kuk+eng; 
        this.avg = (kuk+eng) / 2; 
    } 
} 
public class ArrayListTest { 
    public static void main(String args[]){ 
        int i=0; 
         
        Jumsu s = null; 
        Jumsu s1 = new Jumsu("왕눈이",100, 80); 
        Jumsu s2 = new Jumsu("아로미",80, 90); 
        Jumsu s3 = new Jumsu("투투",90, 80); 
         
        ArrayList v = new ArrayList(); 
        v.add(s1); 
        v.add(s2); 
        v.add(s3);         
 
        for(i=0; i<v.size(); i++){ 
            s = (Jumsu)v.get(i); 
            System.out.print(s.name + "\t"); 
            System.out.print(s.kuk + "\t"); 
            System.out.print(s.eng + "\t"); 
            System.out.print(s.tot + "\t"); 
            System.out.print(s.avg + "\t\n");            
        } 
    } 
} 
 
 
 

 

6교시

 1) Vector의 정의 및 요소 검색, 크기 조절 

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
package day09;
 
import java.util.*; 
public class SearchDelete{ 
    public static void main(String args[]){ 
        String name[]={"기획자","설계자","개발자"}; 
         
        Vector v = new Vector(); 
         
        //Vector에 배열 요소 저장 
        for(int i =0;i<name.length; i++){ 
            v.addElement(name[i]); 
        } 
         
        //"개발자"가 있는지 검사 
        if(v.contains("개발자")){ 
            int i = v.indexOf("개발자"); 
            System.out.println("해당 객체의 인덱스 " + (i+1) + "번째에 있습니다."); 
        }            
        else{ 
            System.out.println("해당 객체가 없습니다."); 
        } 
 
        //첫 번째 요소 삭제  
        v.removeElementAt(0); 
        System.out.println("===== 지우고 난 후에는 === "); 
        String s=""; 
        for(int j=0;j<v.size();j++){ 
            s = (String)v.elementAt(j); 
            System.out.println("Vector " + j + "번째 요소는 " + s); 
        } 
        System.out.println("\n초기상태 크기........................");         
        System.out.println("엘러먼트의 수는 " + v.size()); //실제 저장된 객체의 수 
        System.out.println("벡터의 크기는 " + v.capacity()); //객체를 저장할 수 있는 초기 사이즈 
 
        System.out.println("\nv.trimToSize()후....................."); 
        v.trimToSize();  //값이 할당되지 않았으면 메모리 삭제 
        System.out.println("엘러먼트의 수는 " + v.size());         
        System.out.println("벡터의 크기는 " + v.capacity()); 
         
        System.out.println("\n디자이너 요소 추가후.................."); 
        v.addElement("디자이너"); 
        System.out.println("엘러먼트의 수는 " + v.size());         
        System.out.println("벡터의 크기는 " + v.capacity()); 
         
        System.out.println("\nCoder 요소 추가후.................."); 
        v.addElement("Coder"); 
        System.out.println("엘러먼트의 수는 " + v.size());         
        System.out.println("벡터의 크기는 " + v.capacity()); 
         
        System.out.println("\nPM 요소 추가후.................."); 
         
        v.addElement("PM"); 
        System.out.println("엘러먼트의 수는 " + v.size());         
        System.out.println("벡터의 크기는 " + v.capacity()); 
    } 
} 
 
 
2) Map 
 - Key, value 한쌍 
 - HashMap, Hashtable  
 - put 메서드로 입력합니다. 
 - 중복된 키 값을 허용하지 않습니다. 만약 사용하게되면 기존의 값이 삭제된다. 
 - 검색 결과가 없으면 null을 리턴한다. 

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
package day09;
 
import java.util.*; 
public class MapTest { 
    public static void main(String[] args) { 
        HashMap list=new HashMap(); 
        list.put("0","lee"); 
        list.clear();//모두 제거 
        list.put("1","cho"); 
        list.put("2","kim"); 
        list.put("3","chung");
        list.put("4","min"); 
        list.put("3","jung");
        System.out.println(list.size());//size() 
        System.out.println(list.containsKey("3")); 
        list.remove("2"); 
        System.out.println(list.size()); 
 
        print(list);//Set 만들기 
    } 
    public static void print(Map sets){ 
        Set set=sets.keySet();//key값을 Set으로 
        Iterator iter=set.iterator(); 
        while(iter.hasNext()){ 
            String key=(String)iter.next(); 
            System.out.println(key+"  "+sets.get(key));//value 
        } 
    }// 
}  
 
 
 
 
 

 

7교시

Hashtable

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
package day09;
 
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Map;
 
public class TestHashTable {
 
  public static void main(String[] args) {
    Hashtable ht = new Hashtable();
 
    ht.put("AREA01", "대한민국");
    ht.put("AREA02", "러시아");
    ht.put("AREA03", "중국");
    ht.put("AREA04", "일본");
 
    String area = (String) ht.get("AREA05");
 
    if (area != null) {
      System.out.println(area);
    } else {
      System.out.println("검색지역이 없습니다.");
    }
 
    print(ht);
 
  }
 
  private static void print(Hashtable ht) {
    Iterator iter = ht.keySet().iterator();
    while (iter.hasNext()) {
      String key = (String) iter.next();
      System.out.println(key + " = " + ht.get(key));
 
    }
 
    System.out.println("-------------------------------------");
 
    Enumeration e = ht.keys();
    while (e.hasMoreElements()) {
      String key = (String) e.nextElement();
      System.out.println(key + " = " + ht.get(key));
    }
 
  }
 
}
 
 
 

8교시

1
2
3
name = 손흥민
phone = 010-1234-5678
address = 영국 토트넘
 
 

 

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
package day09;
 
import java.io.FileInputStream;
import java.util.Iterator;
import java.util.Properties; 
 
public class ProTest2 {
 
    public static void main(String[] args) {
        String myinfoPath = "myinfo.properties";
 
        FileInputStream fis = null;
 
        Properties pro = new Properties();
        try {
            fis = new FileInputStream(myinfoPath);
 
            pro.load(fis);
 
        } catch (Exception e) {
            e.printStackTrace();
        }
 
        Iterator iter = pro.keySet().iterator();
 
    //while(iter.hasNext()){
        //String key = (String)iter.next();
        //String value = (String)pro.getProperty(key);
        //System.out.println(key+"="+value);
    //}
 
        System.out.println("이름:"+pro.getProperty("name"));
        System.out.println("전화번호:"+pro.getProperty("phone"));
        System.out.println("주소:"+pro.getProperty("address"));
    }
}
 
 
 